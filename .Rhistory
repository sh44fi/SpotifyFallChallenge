install.packages("readxl")
library("readxl")
library("readxl")
setwd("~/Documents/SpotifyFallChallenge")
library(readxl)
X2019_Winter_Data_Science_Intern_Challenge_Data_Set <- read_excel("2019 Winter Data Science Intern Challenge Data Set.xlsx")
View(X2019_Winter_Data_Science_Intern_Challenge_Data_Set)
View(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- read_excel("SpotifyChallenge.xlsx")
View(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- read_excel("SpotifyChallenge.xlsx")
View(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- read_excel("SpotifyChallenge.xlsx")
View(SpotifyChallenge)
sum(SpotifyChallenge$order_amount)
sum(SpotifyChallenge$total_items)
sum(SpotifyChallenge$order_amount)/sum(SpotifyChallenge$total_items)
max(SpotifyChallenge$shop_id)
min(SpotifyChallenge$shop_id)
class(SpotifyChallenge)
data.frame(SpotifyChallenge)
class
class
class(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
class
class(SpotifyChallenge)
sumTotalValue<- sum(SpotifyChallenge$order_amount)
sumTotalOrders<-sum(SpotifyChallenge$total_items)
sumTotalValue/sumTotalOrders
order(SpotifyChallenge$shop_id)
order(SpotifyChallenge$shop_id)
subset(SpotifyChallenge,shop_id ==100)
x<-c[1:100]
1:100
x <- 1:100
x
class(x)
for (val in x) {
orderId<-subset(SpotifyChallenge,shop_id ==val)
}
View(orderId)
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
myList<-list()
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
)
}
myList<-list()
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
}
myList[[100]]
View(myList)
myList[[1]][4]
myList[[100][4]]
myList[[100]][4]
View(myList)
totalOrderAmount = 0
class(totalOrderAmount)
class(sum(myList[[val]][4]))
totalOrderAmount = 0
myList<-list()
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
orderAmount<-myList[[val]][4]
totalOrderAmount =  totalOrderAmount +sum(orderAmount)
}
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
totalOrderAmount = 0
myList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
orderAmount<-myList[[val]][4]
totalOrderAmount =  totalOrderAmount +sum(orderAmount)
}
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
totalOrderAmount = 0
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
orderAmount<-myList[[val]][4]
aov =  sum(orderAmount)/sum(myList[[val]][5])
aovList[[val]]<-aov
}
View(aovList)
sum(aovList)
aovList[[1]]
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
orderAmount<-myList[[val]][4]
aov =  sum(orderAmount)/sum(myList[[val]][5])
aovList[[val]]<-aov
}
sumAOV = 0
for (val in x) {
sumAOV = sumAOV + aovList[[val]]
}
sumAOV/100
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/sum(myList[[val]][5])
aovList[[val]]<-aov
}
View(aovList)
View(aovList)
subset(SpotifyChallenge,shop_id ==1)
nrow(myList[[100]])
View(myList)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/nrow(myList[[val]])
aovList[[val]]<-aov
}
sumAOV = 0
for (val in x) {
sumAOV = sumAOV + aovList[[val]]
}
View(aovList)
sumAOV/100
SpotifyChallenge
sum(SpotifyChallenge$order_amount)/nrow(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
#Average order value of the dataset
aov<-sum(SpotifyChallenge)/nrow(SpotifyChallenge)
#Average order value of the dataset
aov<-sum(SpotifyChallenge$order_amount)/nrow(SpotifyChallenge)
summary(SpotifyChallenge$order_amount)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(SpotifyChallenge$order_amount)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/nrow(myList[[val]])
aovList[[val]]<-aov
}
View(aovList)
aovList
aov.df<-as.data.frame(aovList)
aov.df
View(aov.df)
aovList
View(myList)
finaldf<-as.data.frame(t(aov.df))
View(finaldf)
rownames(finaldf)
row.names(finaldf)<-1:100
finaldf
summary(finaldf)
IQR(finaldf)
boxplot(finaldf)
boxplot(finaldf,ylab="aov")
boxplot(finaldf,ylab="aov",ylim=c(0,100,200,300,500,5000,))
boxplot(finaldf,ylab="aov",ylim=c(0,100,200,300,500,5000))
boxplot(finaldf,ylab="aov",ylim=c(0,100,200,300,500,5000,))
boxplot(finaldf,ylab="aov",ylim=c(0,100,200,300,500,5000))
boxplot(finaldf,ylab="aov",ylim=c(0,500))
boxplot(finaldf,ylab="aov",ylim=c(100,8000))
boxplot(finaldf)
library(dplyr)
library(ggplot2)
summary(finaldf)
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
ggplot(finaldf)
ggplot(finaldf)+geom_boxplot()
ggplot(finaldf)+geom_boxplot(x=v,y,aov)
ggplot(finaldf) +
geom_boxplot(aes(x = stock, y = returns))
ggplot(finaldf) +
geom_boxplot(aes(x = "", y = V1))
ggplot(finaldf) +
geom_boxplot(aes(x = "", y = V1))+
scale_y_continuous(breaks=c(150, 200, 300, 500, 50000))
ggplot(finaldf) +
geom_boxplot(aes(x = "", y = V1))+
scale_y_continuous(breaks=c(150, 200, 300, 500,1000))
ggplot(finaldf) +
geom_boxplot(aes(x = "", y = V1))+
scale_y_continuous(breaks=c(150, 200, 300, 500))
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
ggplot(finaldf) +
geom_boxplot(aes(x = "", y = V1))+
scale_y_continuous(breaks=c(150,1000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+ylim(min,max)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+ylim(0,24000)
nrow(finaldf)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",limits = c(0,500,15000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",limits = c(100,500,24000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",limits = c(0,24000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(100,500,5000,24000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(100,500,5000,49213,245102))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(100,49213,245102))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(0,49213,245102))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(150,200,300,49213,245102))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+scale_y_continuous(name = "aov",breaks = c(150,200,300,50000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,50000),limits = c(50,50000))
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))
install.packages("ggrepel")
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text(aes(label = rownames(finaldf)),
size = 3.5)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text(aes(label = rownames(finaldf)),
size = 3.5)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text(aes(label = rownames(finaldf)),
size = 3.5)
library(ggrepel)
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text(aes(label = rownames(finaldf)),
size = 3.5)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
detect_outlier < - function(x) {
# calculate first quantile
Quantile1 < - quantile(x, probs=.25)
# calculate third quantile
Quantile3 < - quantile(x, probs=.75)
# calculate inter quartile range
IQR = Quantile3-Quantile1
# return true or false
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
detect_outlier < - function(x) {
# calculate first quantile
Quantile1 < - quantile(x, probs=.25)
# calculate third quantile
Quantile3 < - quantile(x, probs=.75)
# calculate inter quartile range
IQR = Quantile3-Quantile1
# return true or false
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
detect_outlier < - function(x) {
# calculate first quantile
Quantile1 < - quantile(x, probs=.25)
# calculate third quantile
Quantile3 < - quantile(x, probs=.75)
# calculate inter quartile range
IQR = Quantile3-Quantile1
# return true or false
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
Q1 <- quantile(data$Apperance, .25)
Q3 <- quantile(data$Apperance, .75)
Q1 <- quantile(finaldf$V1, .25)
Q3 <- quantile(finaldf$V1, .75)
IQR <- IQR(finaldf$V1)
no_outliers <- subset(finaldf, finaldf$V1 > (Q1 - 1.5*IQR) & finaldf$V1 < (Q3 + 1.5*IQR))
dim(no_outliers)
no_outliers <- subset(finaldf, finaldf$V1 > (Q1 - 1.5*IQR) & finaldf$V1 < (Q3 + 1.5*IQR))
dim(no_outliers)
View(no_outliers)
max(no_outliers)
mean(no_outliers)
summary(no_outliers)
no_outliers <- subset(finaldf, finaldf$V1 > (Q1 - 1.5*IQR) & finaldf$V1 < (Q3 + 1.5*IQR))
dim(no_outliers)
summary(no_outliers)
summary(no_outliers)
no_outliers1 <- subset(SpotifyChallenge, SpotifyChallenge$order_amount > (Q1 - 1.5*IQR) & SpotifyChallenge$order_amount < (Q3 + 1.5*IQR))
dim(no_outliers1)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,300,245101))+coord_trans(y = "log10") +
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,600,245101))+coord_trans(y = "log10") +
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
outlierRemoved<- subset(SpotifyChallenge,shop_id!= 78 & shop_id != 48 )
View(no_outliers)
View(outlierRemoved)
sum(outlierRemoved$order_amount)/nrow(outlierRemoved)
summary(outlierRemoved$order_amount)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
library(ggrepel)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
#Average order value of the dataset
aov<-sum(SpotifyChallenge$order_amount)/nrow(SpotifyChallenge)
#Show mean median and mode
#Mean substantially higher then the mode.
summary(SpotifyChallenge$order_amount)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#Mode substantially lower then the mean.
#There are few high dollar orders that skew up the average
getmode(SpotifyChallenge$order_amount)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/nrow(myList[[val]])
aovList[[val]]<-aov
}
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
library(ggrepel)
#Average order value of the dataset
aov<-sum(SpotifyChallenge$order_amount)/nrow(SpotifyChallenge)
#Show mean median and mode
#Mean substantially higher then the mode.
summary(SpotifyChallenge$order_amount)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/nrow(myList[[val]])
aovList[[val]]<-aov
}
aov.df<-as.data.frame(aovList)
finaldf<-as.data.frame(t(aov.df))
row.names(finaldf)<-1:100
summary(finaldf)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,600,245101))+coord_trans(y = "log10") +
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
outlierRemoved<- subset(SpotifyChallenge,shop_id!= 78 & shop_id != 48 )
summary(outlierRemoved$order_amount)
View(outlierRemoved)
View(SpotifyChallenge)
library(readxl)
SpotifyChallenge <- data.frame(read_excel("SpotifyChallenge.xlsx"))
View(SpotifyChallenge)
library(ggrepel)
#Average order value of the dataset
aov<-sum(SpotifyChallenge$order_amount)/nrow(SpotifyChallenge)
#Show mean median and mode
#Mean substantially higher then the mode.
summary(SpotifyChallenge$order_amount)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#Mode substantially lower then the mean.
#There are few high dollar orders that skew up the average
getmode(SpotifyChallenge$order_amount)
totalOrderAmount = 0
myList<-list()
aovList<-list()
x<-1:100
for (val in x) {
myList[[val]]<-subset(SpotifyChallenge,shop_id ==val)
aov =  sum(myList[[val]][4])/nrow(myList[[val]])
aovList[[val]]<-aov
}
aov.df<-as.data.frame(aovList)
finaldf<-as.data.frame(t(aov.df))
row.names(finaldf)<-1:100
summary(finaldf)
require("ggrepel")
set.seed(42)
ggplot(finaldf,aes(x="",y=V1))+geom_boxplot()+
scale_y_continuous(name = "aov",breaks = c(150,200,600,245101))+coord_trans(y = "log10") +
geom_text_repel(aes(label = rownames(finaldf)),
size = 3.5)
outlierRemoved<- subset(SpotifyChallenge,shop_id!= 78 & shop_id != 42 )
summary(outlierRemoved)
summary(outlierRemoved$order_amount)
